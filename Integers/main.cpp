#include<iostream>
using namespace std;


//#define DIVISION_INTO_WHOLE
//#define THE_REMAINDER_OF_THE_DIVISION
//#define THE_LAST_DIGIT
//#define THE_FIRST_DIGIT
//#define NUMBER_OF_TENS
//#define THREE_DIGIT_NUMBER
//#define THE_NEXT_EVEN
//#define DESKS
//#define BUYING_PIES
//#define ELECTRONIC_CLOCK
//#define ELECTRONIC_CLOCK_TIME_DIFFERENCE
//#define MKAD
//#define SYMMETRIC_NUMBER
//#define SNAIL



int main()
{
#ifdef DIVISION_INTO_WHOLE

        /*Белочки и орешки - 1
        N белочек нашли K орешков и решили разделить их поровну.Определите, сколько орешков достанется каждой белочке.
        Формат входных данных
        На вход дается два целых положительных числа N и K, каждое из которых не превышает 10000.
        Формат выходных данных
        Выведите одно целое число - ответ на задачу.*/

    int a, b;
    cin >> a >> b;
    cout << b / a;// put your code here
    return 0;
#endif // DIVISION_INTO_WHOLE

#ifdef THE_REMAINDER_OF_THE_DIVISION
  
/*Белочки и орешки - 2
N белочек нашли K орешков и решили разделить их поровну.Определите, сколько орешков останется после того, как все белочки возьмут себе равное количество орешков.
Формат входных данных
На вход дается два целых положительных числа N и K, каждое из которых не превышает 10000.
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input :
3
14
Sample Output :
2*/

    int a, b;
    cin >> a >> b;
    cout << b % a;
    return 0;
#endif // THE_REMAINDER_OF_THE_DIVISION

#ifdef THE_LAST_DIGIT
    /*    Последняя цифра
Дано натуральное число, выведите его последнюю цифру.
Формат входных данных
На вход дается натуральное число N, не превосходящее 10000.
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input :
753
    Sample Output :
3
*/

    int a, b = 10, c;
    cin >> a;
    c = a % b;
    cout << c;
    return 0;
#endif // THE_LAST_DIGIT

#ifdef THE_FIRST_DIGIT
    /*    ПЕРВАЯ ЦИФРА ДВУЗНАЧНОГО ЧИСЛА
Дано двузначное число.Выведите его первую цифру(число десятков)
Формат входных данных
На вход дается натуральное двузначное число N.
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input :
42
    Sample Output :
4
*/

    int a, b;
    cin >> a;
    b = a / 10;
    cout << b;
    return 0;
#endif // THE_FIRST_DIGIT

#ifdef NUMBER_OF_TENS
/*    ЧИСЛО ДЕСЯТКОВ
Дано целое неотрицательное число N, определите число десятков в нем(предпоследнюю цифру числа).Если предпоследней цифры нет, то можно считать, что число десятков равно нулю.
Формат входных данных
На вход дается целое положительное число N(0 ≤ N ≤ 1000000).
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input :
73
    Sample Output :
7
*/

    int a, b;
    cin >> a;
    b = (a % 100) / 10;
    cout << b;
    return 0;
#endif // NUMBER_OF_TENS

#ifdef THREE_DIGIT_NUMBER
    /*   СУММА ЦИФР ТРЕХЗНАЧНОГО ЧИСЛА
Дано целое трехзначное число.Найдите сумму его цифр.
Формат входных данных
На вход дается число от 100 до 999.
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input :
476
    Sample Output :
17
*/

    int a, b, c, d, e;
    cin >> a;
    b = a / 100;
    c = (a % 100) / 10;
    d = a % 10;
    e = b + c + d;
    cout << e;
    return 0;
#endif // THREE_DIGIT_NUMBER

#ifdef THE_NEXT_EVEN
    /*    СЛЕДУЮЩЕЕ ЧЕТНОЕ
На вход дается натуральное число N.Выведите следующее за ним четное число
Формат входных данных
На вход дается целое положительное число N, не превышающее 10000.
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input 1:
7
Sample Output 1 :
8
Sample Input 2 :
8
Sample Output 2 :
10
*/

    int a, b;
    cin >> a;
    b = (a / 2) * 2 + 2;
    cout << b;
    return 0;
#endif // THE_NEXT_EVEN

#ifdef DESKS
    /*    ПАРТЫ
В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них новыми партами.
За каждой партой может сидеть два учащихся.Известно количество учащихся в каждом из трех классов.Выведите наименьшее число парт,
которое нужно приобрести для них.Каждый класс сидит в своем кабинете.
Формат входных данных
Программа получает на вход три целых неотрицательных числа : количество учащихся в каждом из трех классов(числа не превышают 1000).
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input 1:
20
21
22
Sample Output 1 :
32
Sample Input 2 :
16
18
20
Sample Output 2 :
27
*/

    int a, b, c, d, e, f, g;
    cin >> a >> b >> c;
    d = (a + 1) / 2;
    e = (b + 1) / 2;
    f = (c + 1) / 2;
    g = d + e + f;
    cout << g;
    return 0;
#endif // DESKS

#ifdef BUYING_PIES
    /*    ПОКУПКА ПИРОЖКОВ
Пирожок в столовой стоит A рублей и B копеек.Определите, сколько рублей и копеек нужно заплатить за N пирожков.
Формат входных данных
Программа получает на вход три числа : A, B, N - целые, положительные, не превышают 10000.
Формат выходных данных
Программа должна вывести два числа через пробел : стоимость покупки в рублях и копейках.
Sample Input 1 :
10
15
2
Sample Output 1 :
20 30
Sample Input 2 :
2
50
4
Sample Output 2 :
10 0
*/

    int a, b, c;
    cin >> a >> b >> c;
    cout << a * c + b * c / 100 << " " << b * c % 100;
    return 0;
#endif // BUYING_PIES

#ifdef ELECTRONIC_CLOCK

    /*    ЭЛЕКТРОННЫЕ ЧАСЫ
Электронные часы показывают время в формате h : mm:ss(от 0:00 : 00 до 23 : 59 : 59), то есть сначала записывается количество часов,
потом обязательно двузначное количество минут, затем обязательно двузначное количество секунд.Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
С начала суток прошло N секунд.Выведите, что покажут часы.
Формат входных данных
На вход дается натурально число N, не превосходящее 10 ^ 7(10000000).
Формат выходных данных
Выведите ответ на задачу.
Sample Input 1:
3602
    Sample Output 1 :
    1 : 00 : 02
    Sample Input 2 :
    129700
    Sample Output 2 :
    12 : 01 : 40
*/

    int a, h, m, s, m1, s1;
    cin >> a;
    h = (a / 3600) % 24;
    m = ((a / 60) % 60) / 10;
    m1 = ((a / 60) % 60) % 10;
    s = (a % 60) / 10;
    s1 = (a % 60) % 10;
    cout << h << ":" << m << m1 << ":" << s << s1;// put your code here
    return 0;
#endif // ELECTRONIC_CLOCK

#ifdef ELECTRONIC_CLOCK_TIME_DIFFERENCE
    /*    РАЗНОСТЬ ВРЕМЕН

Даны значения двух моментов времени, принадлежащих одним и тем же суткам : часы, минуты и секунды для каждого из моментов времени.
Известно, что второй момент времени наступил не раньше первого.Определите, сколько секунд прошло между двумя моментами времени.
Формат входных данных
Программа на вход получает три целых числа : часы, минуты, секунды, задающие первый момент времени и три целых числа, задающих второй момент времени.
Формат выходных данных
Выведите число секунд между этими моментами времени.
Sample Input 1:
1
1
1
2
2
2
Sample Output 1:
3661
    Sample Input 2 :
    1
    2
    30
    1
    3
    20
    Sample Output 2:
50
*/

    int h, m, s, h1, m1, s1, r;
    cin >> h >> m >> s >> h1 >> m1 >> s1;
    r = (h1 * 3600 + m1 * 60 + s1) - (h * 3600 + m * 60 + s);
    cout << r;
    return 0;
#endif // ELECTRONIC_CLOCK_TIME_DIFFERENCE

#ifdef MKAD
    /*    МКАД

Длина Московской кольцевой автомобильной дороги —109 километров.Байкер Вася стартует с нулевого километра МКАД и едет со скоростью V километров в час.На какой отметке он остановится через T часов ?
Формат входных данных
Программа получает на вход целые числа V и T.Если V > 0, то Вася движется в положительном направлении по МКАД, если же значение V < 0, то в отрицательном. 0 ≤ T ≤ 1000, -1000 ≤ V ≤ 1000
Формат выходных данных
Программа должна вывести целое число от 0 до 108 — номер отметки, на которой остановится Вася.
Sample Input 1:
60
2
Sample Output 1 :
11
Sample Input 2 :
-1
1
Sample Output 2 :
108
*/

    int a, b, c, d;
    cin >> a >> b;
    c = a * b % 109;
    d = (c + 109) % 109;
    cout << d;
    return 0;
#endif // MKAD

#ifdef SYMMETRIC_NUMBER
    /*    СИММЕТРИЧНОЕ ЧИСЛО
Дано четырехзначное число.Определите, является ли его десятичная запись симметричной.
Если число симметричное, то выведите 1, иначе выведите любое другое целое число.
Число может иметь меньше четырех знаков, тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
Формат входных данных
Вводится единственное число.
Формат выходных данных
Выведите одно целое число - ответ на задачу.
Sample Input 1:
2002
Sample Output 1 :
1
Sample Input 2 :
2008
Sample Output 2 :
37
*/

    int a;
    cin >> a;
    cout << (a / 100 == a % 10 * 10 + a / 10 % 10);// put your code here
    return 0;
#endif // SYMMETRIC_NUMBER

#ifdef SNAIL
    /*    УЛИТКА

Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров.
На какой день улитка доползет до вершины шеста ?
Формат входных данных
Программа получает на вход целые неотрицательные числа H, A, B, причем H > B.Числа не превосходят 100.
Формат выходных данных
Программа должна вывести одно натуральное число.Гарантируется, что A > B.
Sample Input :
10
3
2
Sample Output :
8
*/

    int a, b, c;
    cin >> a >> b >> c;
    cout << (a / (b - c) - (b - (a % (b - c))) / (b - c)) + 1;
    return 0;
#endif // SNAIL

}